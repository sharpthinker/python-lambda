include:
  # Python template
  - project: "to-be-continuous/python"
    ref: "6.1.3"
    file: "/templates/gitlab-ci-python.yml"
  # Sonar template
  - project: "to-be-continuous/sonar"
    ref: "3.1.1"
    file: "/templates/gitlab-ci-sonar.yml"
  # AWS template
  - project: "to-be-continuous/aws"
    ref: "2.3.2"
    file: "/templates/gitlab-ci-aws.yml"
  # Postman template
  - project: "to-be-continuous/postman"
    ref: "3.1.1"
    file: "/templates/gitlab-ci-postman.yml"

# Global variables
variables:
  # Python
  PYTHON_IMAGE: "registry.hub.docker.com/library/python:3.9"
  PYTEST_ENABLED: "true"
  PYTEST_ARGS: "tests/"
  PYLINT_ENABLED: "true"
  PYLINT_FILES: "burger_maker/ tests/"
  PYTHON_EXTRA_REQS_FILES: "requirements-dev.txt"
  BANDIT_ENABLED: "true"
  BANDIT_ARGS: "--skip B311 -r burger_maker/"
  SAFETY_ENABLED: "false"

  # Use SonarQube from sonarcloud.io
  SONAR_HOST_URL: "https://sonarcloud.io"
  # organization & projectKey defined in sonar-project.properties
  # SONAR_TOKEN defined as a secret CI/CD variable

  # AWS
  # use an image with both AWS and SAM CLI
  AWS_CLI_IMAGE: "public.ecr.aws/sam/build-python3.9:latest"
  # AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY defined as secret CI/CD variable
  AWS_REVIEW_ENABLED: "true"
  AWS_STAGING_ENABLED: "true"
  AWS_PROD_ENABLED: "true"
  AWS_BASE_APP_NAME: "burger-maker" # instead of default project name 'python-serverless-on-aws'

  # Postman
  REVIEW_ENABLED: "true"

# Pipeline steps
stages:
  - build
  - test
  - package-build
  - deploy
  - acceptance
  - publish
  - production
